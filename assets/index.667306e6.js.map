{"version":3,"file":"index.667306e6.js","sources":["../../src/components/locale-provider/context.tsx","../../src/components/locale-provider/locale/en_US.tsx","../../src/components/locale-provider/index.tsx"],"sourcesContent":["import { createContext } from 'react';\nimport type { Locale } from './types';\n\nexport type LocaleContextProps = Partial<Locale> & { exist?: boolean };\n\nconst LocaleContext = createContext<LocaleContextProps | undefined>(undefined);\n\nexport default LocaleContext;\n","import { Locale } from '../types';\n\nconst localeValues: Locale = {\n  locale: 'en',\n  global: {\n    placeholder: 'placeholder',\n  },\n  Text: {\n    edit: 'edit',\n    copy: 'copy',\n    copied: 'copied',\n    expand: 'expand',\n  },\n  Modal: {\n    okText: 'OK',\n    cancelText: 'Cancel',\n    justOkText: 'OK',\n  },\n};\n\nexport default localeValues;\n","import React, { FC } from 'react';\nimport LocaleContext from './context';\n// english as default\nimport defaultLocaleData from './locale/en_US';\nimport type {\n  Locale,\n  LocaleComponentName,\n  LocaleReceiverProps,\n  LocaleProviderProps,\n} from './types';\nimport type { LocaleContextProps } from './context';\n\nexport const LocaleReceiver = <\n  C extends LocaleComponentName = LocaleComponentName\n>(\n  props: LocaleReceiverProps<C>\n) => {\n  const { componentName = 'global' as C, defaultLocale, children } = props;\n  const antLocale = React.useContext<LocaleContextProps | undefined>(\n    LocaleContext\n  );\n\n  const getLocale = React.useMemo<NonNullable<Locale[C]>>(() => {\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = antLocale?.[componentName] ?? {};\n    return {\n      ...(locale instanceof Function ? locale() : locale),\n      ...(localeFromContext || {}),\n    } as NonNullable<Locale[C]>;\n  }, [componentName, defaultLocale, antLocale]);\n\n  const getLocaleCode = React.useMemo<string>(() => {\n    const localeCode = antLocale && antLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if (antLocale && antLocale.exist && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode!;\n  }, [antLocale]);\n\n  return children(getLocale, getLocaleCode, antLocale!);\n};\n\nexport function useLocaleReceiver<T extends LocaleComponentName>(\n  componentName: T,\n  defaultLocale?: Locale[T] | Function\n): [Locale[T]] {\n  const antLocale = React.useContext(LocaleContext);\n\n  const componentLocale = React.useMemo(() => {\n    const locale =\n      defaultLocale || defaultLocaleData[componentName || 'global'];\n    const localeFromContext =\n      componentName && antLocale ? antLocale[componentName] : {};\n\n    return {\n      ...(typeof locale === 'function' ? (locale as Function)() : locale),\n      ...(localeFromContext || {}),\n    };\n  }, [componentName, defaultLocale, antLocale]);\n\n  return [componentLocale];\n}\n\nexport class LocaleProvider extends React.Component<LocaleProviderProps, any> {\n  constructor(props: LocaleProviderProps) {\n    super(props);\n    // changeConfirmLocale(props.locale && props.locale.Modal);\n  }\n\n  render() {\n    const { locale, children } = this.props;\n    return (\n      <LocaleContext.Provider value={locale}>{children}</LocaleContext.Provider>\n    );\n  }\n}\n"],"names":["LocaleContext","createContext","undefined","LocaleContext$1","localeValues","locale","global","placeholder","Text","edit","copy","copied","expand","Modal","okText","cancelText","justOkText","en","LocaleReceiver","__name","props","componentName","defaultLocale","children","antLocale","React","getLocale","defaultLocaleData","localeFromContext","_a","getLocaleCode","localeCode","LocaleProvider","_jsx"],"mappings":"2IAKA,MAAMA,EAAgBC,EAAAA,QAAAA,cAA8CC,MAAS,EAE7EC,EAAeH,ECLTI,EAAuB,CAC3BC,OAAQ,KACRC,OAAQ,CACNC,YAAa,aACf,EACAC,KAAM,CACJC,KAAM,OACNC,KAAM,OACNC,OAAQ,SACRC,OAAQ,QACV,EACAC,MAAO,CACLC,OAAQ,KACRC,WAAY,SACZC,WAAY,IACd,CACF,EAEAC,EAAeb,ECRRc,EAAAC,EAAAC,GAAA,CAKL,KAAA,CAAM,cAAAC,EAAA,SAAkB,cAAAC,EAAeA,SAAAA,CAAeC,EAAAA,EACtDC,EAAAC,EAAA,WAAAzB,CAAA,EAIA0B,EAAAD,EAAA,QAAA,IAAA,OACE,MAAApB,EAAAiB,GAAAK,EAAAN,GACAO,GAAAC,EAAAL,GAAA,YAAAA,EAAAH,KAAA,KAAAQ,EAAA,CAAA,EACA,MAAA,CAAO,GAAAxB,aAAA,SAAAA,EAAA,EAAAA,EACuCA,GAAAA,GAAAA,CAAAA,CAClB,CAC5B,EAAA,CAAAgB,EAAAC,EAAAE,CAAA,CAAA,EAGFM,EAAAL,EAAA,QAAA,IAAA,CACE,MAAAM,EAAAP,GAAAA,EAAA,OAEA,OAAAA,GAAAA,EAAA,OAAA,CAAAO,EACEJ,EAAA,OAEFI,CAAOA,EAAAA,CAAAA,CAAAA,CAAAA,EAGT,OAAAR,EAAAG,EAAAI,EAAAN,CAAA,CACF,EA7BO,kBAoDA,MAAAQ,UAAAP,EAAA,SAAA,CAAuE,YAAAL,EAAA,CAE1E,MAAAA,CAAA,CAAW,CAEb,QAAA,CAGE,KAAA,CAAM,OAAAf,EAAEA,SAAAA,CAAQkB,EAAAA,KAAAA,MAChB,OAAAU,EAAAjC,EAAA,SAAA,CACyB,MAAAK,EAAQA,SAAAA,CAAO,CAAA,CAAoC,CAGhF,CAZOc,EAAAa,EAAA"}