{"version":3,"file":"index.stories.750e459b.js","sources":["../../src/components/message/message.tsx","../../.storybook/utils/index.ts"],"sourcesContent":["import React from 'react';\nimport { IconClose, IconProps } from '../icon';\nimport { tuple } from '../_util/type';\nimport { iconPrefixCls } from '../_util';\nimport classNames from 'classnames';\nimport RCNotification from 'rc-notification';\nimport { IconAreaYes } from '../icon/components/icon-area-success';\nimport { IconAreaInfo } from '../icon/components/icon-area-info';\nimport { IconAreaError } from '../icon/components/icon-area-error';\nimport type { NoticeContent, NotificationInstance as RCNotificationInstance } from 'rc-notification/lib/Notification';\nimport { BaseProps } from '../../types/index';\nimport { globalConfig } from '../config-provider/index';\nimport './style/index.less';\n\nexport type MessageType = PromiseLike<any>;\nexport interface ThenableArgument {\n  (val: any): void;\n}\n\nexport const typeList = tuple('info', 'success', 'error', 'warning', 'loading');\nexport type NoticeType = typeof typeList[number];\n// export const typeLissat = Object.keys(typeToIcon) as NoticeType[];\ntype ConfigContent = React.ReactNode;\ntype ConfigDuration = number | (() => void);\ntype JointContent = ConfigContent | ArgsProps;\nexport type ConfigOnClose = () => void;\n\nexport interface ArgsProps extends BaseProps {\n  content: any;\n  duration?: number;\n  type?: NoticeType;\n  rootPrefixCls?: string;\n  getPopupContainer?: (triggerNode: HTMLElement) => HTMLElement;\n  onClose?: () => void;\n  icon?: React.ReactNode;\n  key?: string | number;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nexport interface MessageInstance {\n  info(content: JointContent, duration?: ConfigDuration, onClose?: ConfigOnClose): MessageType;\n  success(content: JointContent, duration?: ConfigDuration, onClose?: ConfigOnClose): MessageType;\n  error(content: JointContent, duration?: ConfigDuration, onClose?: ConfigOnClose): MessageType;\n  warning(content: JointContent, duration?: ConfigDuration, onClose?: ConfigOnClose): MessageType;\n  loading(content: JointContent, duration?: ConfigDuration, onClose?: ConfigOnClose): MessageType;\n  open(args: ArgsProps): MessageType;\n}\n\nexport interface MessageApi extends MessageInstance {\n  warn(content: JointContent, duration?: ConfigDuration, onClose?: ConfigOnClose): MessageType;\n  config(options: ConfigOptions): void;\n  destroy(messageKey?: React.Key): void;\n  useMessage(): [MessageInstance, React.ReactElement];\n}\n\nexport interface ConfigOptions {\n  top?: number;\n  duration?: number;\n  prefixCls?: string;\n  getContainer?: () => HTMLElement;\n  transitionName?: string;\n  maxCount?: number;\n}\n\nconst typeToIcon = {\n  success: IconAreaYes,\n  info: IconAreaInfo,\n  error: IconAreaError,\n  warning: IconAreaInfo,\n  // loading: IconClose,\n};\n\nlet messageInstance: RCNotificationInstance | null;\nlet defaultDuration = 3;\nlet defaultTop: number;\nlet key = 1;\nlet localPrefixCls = '';\nlet transitionName = 'move-up';\nlet hasTransitionName = false;\nlet getContainer: () => HTMLElement;\nlet maxCount: number;\n\nexport function getKeyThenIncreaseKey() {\n  return key++;\n}\n\nfunction getRCNotificationInstance(\n  args: ArgsProps,\n  callback: (info: { prefixCls: string; rootPrefixCls: string; instance: RCNotificationInstance }) => void\n) {\n  const { prefixCls: customizePrefixCls, getPopupContainer: getContextPopupContainer } = args;\n  const { getPrefixCls, getRootPrefixCls } = globalConfig();\n  const prefixCls = getPrefixCls('message', customizePrefixCls);\n  const rootPrefixCls = getRootPrefixCls(args.rootPrefixCls, prefixCls);\n\n  if (messageInstance) {\n    callback({\n      prefixCls,\n      rootPrefixCls,\n      instance: messageInstance,\n    });\n    return;\n  }\n\n  const instanceConfig = {\n    prefixCls,\n    transitionName: hasTransitionName ? transitionName : `${rootPrefixCls}-${transitionName}`,\n    style: { top: defaultTop }, // 覆盖原来的样式\n    getContainer: getContainer || getContextPopupContainer,\n    maxCount,\n  };\n\n  RCNotification.newInstance(instanceConfig, (instance: any) => {\n    if (messageInstance) {\n      callback({\n        prefixCls,\n        rootPrefixCls,\n        instance: messageInstance,\n      });\n      return;\n    }\n    messageInstance = instance;\n    callback({ prefixCls, rootPrefixCls, instance });\n  });\n}\n\nfunction getRCNoticeProps(args: ArgsProps, prefixCls: string): NoticeContent {\n  const duration = args.duration !== undefined ? args.duration : defaultDuration;\n  const IconComponent = typeToIcon[args.type!]({\n    className: iconPrefixCls,\n  });\n  const messageClass = classNames(`${prefixCls}-custom-content`, {\n    [`${prefixCls}-${args.type}`]: args.type,\n  });\n  return {\n    key: args.key,\n    duration,\n    style: args.style || {},\n    className: args.className,\n    content: (\n      // <ConfigProvider iconPrefixCls={iconPrefixCls}>\n      <div className={messageClass}>\n        {args.icon || IconComponent}\n        <span>{args.content}</span>\n      </div>\n      // </ConfigProvider>\n    ),\n    onClose: args.onClose,\n    onClick: args.onClick,\n  };\n}\n\nfunction notice(args: ArgsProps): MessageType {\n  const target = args.key || getKeyThenIncreaseKey();\n  const closePromise = new Promise((resolve) => {\n    const callback = () => {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n      return resolve(true);\n    };\n    getRCNotificationInstance(args, ({ prefixCls, instance }) => {\n      instance.notice(getRCNoticeProps({ ...args, key: target, onClose: callback }, prefixCls));\n    });\n  });\n  const result: any = () => {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n  result.then = (filled: ThenableArgument, rejected: ThenableArgument) => closePromise.then(filled, rejected);\n  result.promise = closePromise;\n\n  return result;\n}\n\nfunction isArgsProps(content: JointContent): content is ArgsProps {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!(content as ArgsProps).content;\n}\n\nexport function attachTypeApi(originalApi: MessageApi, type: NoticeType) {\n  originalApi[type] = (content: JointContent, duration?: ConfigDuration, onClose?: ConfigOnClose) => {\n    if (isArgsProps(content)) {\n      return originalApi.open({ ...content, type });\n    }\n\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return originalApi.open({ content, duration, type, onClose });\n  };\n}\n\nfunction setMessageConfig(options: ConfigOptions) {\n  if (options.top !== undefined) {\n    defaultTop = options.top;\n    messageInstance = null; // delete messageInstance for new defaultTop\n  }\n  if (options.duration !== undefined) {\n    defaultDuration = options.duration;\n  }\n\n  if (options.prefixCls !== undefined) {\n    localPrefixCls = options.prefixCls;\n  }\n  if (options.getContainer !== undefined) {\n    getContainer = options.getContainer;\n    messageInstance = null; // delete messageInstance for new getContainer\n  }\n  if (options.transitionName !== undefined) {\n    transitionName = options.transitionName;\n    messageInstance = null; // delete messageInstance for new transitionName\n    hasTransitionName = true;\n  }\n  if (options.maxCount !== undefined) {\n    maxCount = options.maxCount;\n    messageInstance = null;\n  }\n}\n\nexport const message: any = {\n  open: notice,\n  config: setMessageConfig,\n  destroy(messageKey?: React.Key) {\n    if (messageInstance) {\n      if (messageKey) {\n        const { removeNotice } = messageInstance;\n        removeNotice(messageKey);\n      } else {\n        const { destroy } = messageInstance;\n        destroy();\n        messageInstance = null;\n      }\n    }\n  },\n};\n\ntypeList.forEach((type) => attachTypeApi(message, type));\n\nmessage.warn = message.warning;\n\nexport default message as MessageApi;\n","export function randomString(len = 32) {\n  var $chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';    /****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/\n  var maxPos = $chars.length;\n  var pwd = '';\n  for (let i = 0; i < len; i++) {\n    pwd += $chars.charAt(Math.floor(Math.random() * maxPos));\n  }\n  return pwd;\n}\n"],"names":["typeList","tuple","typeToIcon","success","IconAreaYes","info","IconAreaInfo","error","IconAreaError","warning","messageInstance","defaultDuration","defaultTop","key","transitionName","hasTransitionName","getContainer","maxCount","getKeyThenIncreaseKey","getRCNotificationInstance","args","callback","prefixCls","customizePrefixCls","getPopupContainer","getContextPopupContainer","getPrefixCls","getRootPrefixCls","globalConfig","rootPrefixCls","instance","instanceConfig","style","top","newInstance","getRCNoticeProps","duration","undefined","IconComponent","type","className","iconPrefixCls","messageClass","classNames","content","icon","onClose","onClick","notice","target","closePromise","Promise","resolve","__name","result","removeNotice","then","filled","rejected","promise","isArgsProps","Object","prototype","toString","call","attachTypeApi","originalApi","open","setMessageConfig","options","message","config","destroy","messageKey","forEach","warn","message$1","randomString","len","$chars","maxPos","pwd","i"],"mappings":"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"}