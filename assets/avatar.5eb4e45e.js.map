{"version":3,"file":"avatar.5eb4e45e.js","sources":["../../src/components/avatar/avatar.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { ConfigContext } from '../config-provider/context';\nimport classNames from 'classnames';\nimport type { AvatarSize } from './context';\nimport { BaseProps } from '../../types';\nimport './style/index.less';\n\nexport interface AvatarProps extends BaseProps {\n  /** Shape of avatar, options: `circle`, `square` */\n  // shape?: 'circle' | 'square';\n  /*\n   * Size of avatar, options: `large`, `small`, `default`\n   * or a custom number size\n   * */\n  size?: AvatarSize;\n  // gap?: number;\n  /** Src of image avatar */\n  src?: React.ReactNode;\n  /** Srcset of image avatar */\n  srcSet?: string;\n  // draggable?: boolean;\n  /** Icon to be used in avatar */\n  icon?: React.ReactNode;\n  crossOrigin?: '' | 'anonymous' | 'use-credentials';\n  onClick?: (e?: React.MouseEvent<HTMLElement>) => void;\n  /* callback when img load error */\n  /* return false to prevent Avatar show default fallback behavior, then you can do fallback by your self */\n  onError?: () => boolean;\n}\n\nexport const Avatar: FC<AvatarProps> = (props) => {\n  // const groupSize = React.useContext(SizeContext);\n\n  const [scale, setScale] = React.useState(1);\n  const [mounted, setMounted] = React.useState(false);\n  const [isImgExist, setIsImgExist] = React.useState(true);\n\n  const avatarNodeRef = React.useRef<HTMLSpanElement>(null);\n  const avatarChildrenRef = React.useRef<HTMLSpanElement>(null);\n  // const avatarNodeMergeRef = composeRef<HTMLSpanElement>(ref, avatarNodeRef);\n\n  const { getPrefixCls } = React.useContext(ConfigContext);\n\n  // const setScaleParam = () => {\n  //   if (!avatarChildrenRef.current || !avatarNodeRef.current) {\n  //     return;\n  //   }\n  //   const childrenWidth = avatarChildrenRef.current.offsetWidth; // offsetWidth avoid affecting be transform scale\n  //   const nodeWidth = avatarNodeRef.current.offsetWidth;\n  //   // denominator is 0 is no meaning\n  //   if (childrenWidth !== 0 && nodeWidth !== 0) {\n  //     const { gap = 4 } = props;\n  //     if (gap * 2 < nodeWidth) {\n  //       setScale(\n  //         nodeWidth - gap * 2 < childrenWidth\n  //           ? (nodeWidth - gap * 2) / childrenWidth\n  //           : 1\n  //       );\n  //     }\n  //   }\n  // };\n\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  React.useEffect(() => {\n    setIsImgExist(true);\n    setScale(1);\n  }, [props.src]);\n\n  // React.useEffect(() => {\n  //   setScaleParam();\n  // }, [props.gap]);\n\n  const handleImgLoadError = () => {\n    const { onError } = props;\n    const errorFlag = onError ? onError() : undefined;\n    if (errorFlag !== false) {\n      setIsImgExist(false);\n    }\n  };\n\n  const {\n    prefixCls: customizePrefixCls,\n    // shape = 'circle',\n    size = 'default',\n    src,\n    srcSet,\n    icon,\n    className,\n    // alt,\n    // draggable,\n    children,\n    crossOrigin,\n    ...others\n  } = props;\n\n  const shape = 'circle';\n  // const size = customSize === 'default' ? groupSize : customSize;\n\n  // const needResponsive = Object.keys(\n  //   typeof size === 'object' ? size || {} : {}\n  // ).some((key) => ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'].includes(key));\n  // const screens = useBreakpoint(needResponsive);\n  // const responsiveSizeStyle: React.CSSProperties = React.useMemo(() => {\n  //   if (typeof size !== 'object') {\n  //     return {};\n  //   }\n\n  //   const currentBreakpoint: Breakpoint = responsiveArray.find(\n  //     (screen) => screens[screen]\n  //   )!;\n  //   const currentSize = size[currentBreakpoint];\n\n  //   return currentSize\n  //     ? {\n  //         width: currentSize,\n  //         height: currentSize,\n  //         lineHeight: `${currentSize}px`,\n  //         fontSize: icon ? currentSize / 2 : 18,\n  //       }\n  //     : {};\n  // }, [screens, size]);\n\n  const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n\n  const sizeCls = classNames({\n    [`${prefixCls}-lg`]: size === 'large',\n    [`${prefixCls}-sm`]: size === 'small',\n  });\n\n  const hasImageElement = React.isValidElement(src);\n\n  const classString = classNames(\n    prefixCls,\n    sizeCls,\n    {\n      [`${prefixCls}-${shape}`]: !!shape,\n      [`${prefixCls}-image`]: hasImageElement || (src && isImgExist),\n      [`${prefixCls}-icon`]: !!icon,\n    },\n    className\n  );\n\n  const sizeStyle: React.CSSProperties =\n    typeof size === 'number'\n      ? {\n          width: size,\n          height: size,\n          lineHeight: `${size}px`,\n          fontSize: icon ? size / 2 : 18,\n        }\n      : {};\n\n  let childrenToRender: React.ReactNode;\n  if (typeof src === 'string' && isImgExist) {\n    childrenToRender = (\n      <img\n        src={src}\n        // draggable={draggable}\n        srcSet={srcSet}\n        onError={handleImgLoadError}\n        crossOrigin={crossOrigin}\n      />\n    );\n  } else if (hasImageElement) {\n    childrenToRender = src;\n  } else if (icon) {\n    childrenToRender = icon;\n  } else if (mounted || scale !== 1) {\n    const transformString = `scale(${scale}) translateX(-50%)`;\n    const childrenStyle: React.CSSProperties = {\n      msTransform: transformString,\n      WebkitTransform: transformString,\n      transform: transformString,\n    };\n\n    const sizeChildrenStyle: React.CSSProperties =\n      typeof size === 'number'\n        ? {\n            lineHeight: `${size}px`,\n          }\n        : {};\n\n    childrenToRender = (\n      <span className={`${prefixCls}-string`} ref={avatarChildrenRef} style={{ ...sizeChildrenStyle, ...childrenStyle }}>\n        {children}\n      </span>\n    );\n  } else {\n    childrenToRender = (\n      <span className={`${prefixCls}-string`} style={{ opacity: 0 }} ref={avatarChildrenRef}>\n        {children}\n      </span>\n    );\n  }\n\n  // The event is triggered twice from bubbling up the DOM tree.\n  // see https://codesandbox.io/s/kind-snow-9lidz\n  delete others.onError;\n\n  return (\n    <span {...others} style={{ ...sizeStyle, ...others.style }} className={classString}>\n      {childrenToRender}\n    </span>\n  );\n};\n\nexport default Avatar;\n"],"names":["Avatar","__name","props","scale","setScale","React","mounted","setMounted","isImgExist","setIsImgExist","avatarChildrenRef","getPrefixCls","handleImgLoadError","onError","customizePrefixCls","src","srcSet","icon","className","children","crossOrigin","others","shape","prefixCls","sizeCls","classNames","size","hasImageElement","classString","sizeStyle","childrenToRender","transformString","childrenStyle","sizeChildrenStyle","_jsx","style"],"mappings":"sNA8BO,MAAAA,EAAAC,EAAAC,GAAA,CAGL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EACA,CAAAG,EAAAC,CAAA,EAAAJ,EAAA,SAAA,EAAA,EAEAA,EAAA,OAAA,IAAA,EACA,MAAAK,EAAAL,EAAA,OAAA,IAAA,EAGA,CAAM,aAAAM,CAAEA,EAAAA,EAAAA,WAAAA,CAAAA,EAqBRN,EAAAA,UAAAA,IAAAA,CACEE,EAAAA,EAAAA,CAAe,EAAA,CAAA,CAAA,EAGjBF,EAAAA,UAAAA,IAAAA,CACEI,EAAAA,EAAAA,EACAL,EAAAA,CAAAA,CAAU,EAAA,CAAAF,EAAA,GAAA,CAAA,EAOZ,MAAAU,EAAAX,EAAA,IAAA,CACE,KAAA,CAAM,QAAAY,CAAEA,EAAAA,GACRA,EAAAA,EAAA,EAAA,UACA,IACEJ,EAAAA,EAAAA,CACF,EALF,sBAQA,CAAM,UAAAK,EACOA,KAAAA,EAAAA,UAEJ,IAAAC,EACPA,OAAAA,EACAC,KAAAA,EACAC,UAAAA,EACAC,SAAAA,EAGAC,YAAAA,KACAC,CACGC,EAAAA,EAGLC,EAAA,SA2BAC,EAAAZ,EAAA,SAAAG,CAAA,EAEAU,EAAAC,EAAA,CAA2B,CAAA,GAAAF,QAAAG,IAAA,QACK,CAAA,GAAAH,QAAAG,IAAA,OACA,CAAA,EAGhCC,EAAAtB,EAAA,eAAAU,CAAA,EAEAa,EAAAH,EAAAF,EAAAC,EAAA,CAGE,CAAA,GAAAD,KAAAD,KAAA,CAAA,CAAAA,EAC+BA,CAAAA,GAAAA,WAAAA,GAAAA,GAAAA,EACsBd,CAAAA,GAAAA,UAAAA,CAAAA,CAAAA,CAC1BS,EAAAA,CAAAA,EAK7BY,EAAA,OAAAH,GAAA,SAAA,CAEM,MAAAA,EACSA,OAAAA,EACCA,WAAAA,GAAAA,MACOA,SAAAA,EAAAA,EAAAA,EAAAA,EACa,EAAA,GAIpC,IAAAI,EACA,GAAA,OAAAf,GAAA,UAAAP,EACEsB,EAAAA,EAAAA,MAAAA,CACE,IAAAf,EACE,OAAAC,EAEA,QAAAJ,EACSA,YAAAA,CACT,CAAA,UAEHe,EAEDG,EAAAA,UAAmBf,EAEnBe,EAAAA,UAAmBb,GAAAA,IAAAA,EAAAA,CAEnB,MAAAc,EAAA,SAAA5B,sBACA6B,EAAA,CAA2C,YAAAD,EAC5BA,gBAAAA,EACIA,UAAAA,CACNA,EAGbE,EAAA,OAAAP,GAAA,SAAA,CAEM,WAAA,GAAAA,KACiBA,EAAAA,GAIvBI,EAAAA,EAAAA,OAAAA,CACE,UAAA,GAAAP,WAAoBA,IAAAA,EAAyBb,MAAAA,CAA0B,GAAAuB,EAAKA,GAAAA,CAAsBD,EAAc,SAAAb,CAAE,CAAA,CAGnH,MAEDW,EAAAA,EAAAA,OAAAA,CACE,UAAA,GAAAP,WAAoBA,MAAAA,CAA2B,QAAA,CAAW,EAAE,IAAAb,EAAQA,SAAAA,CAAkB,CAAA,EAQ1F,cAAAW,EAAA,QAEAa,EAAA,OAAA,CACE,GAAAb,EAAUA,MAAAA,CAAe,GAAAQ,EAAKA,GAAAA,EAAAA,KAAqBM,EAAM,UAAAP,EAAcA,SAAAA,CACpEE,CAAAA,CAGP,EAjLO"}