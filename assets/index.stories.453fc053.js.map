{"version":3,"file":"index.stories.453fc053.js","sources":["../../src/components/alert/alert.tsx"],"sourcesContent":["import React, { FC, useState, useRef } from 'react';\nimport { BaseProps } from '../../types';\nimport { ConfigContext } from '../config-provider/context';\nimport { tuple } from '../_util/type';\nimport CSSMotion from 'rc-motion';\n// change import icon path test tree shaking\nimport { IconAreaYes } from '../icon/components/icon-area-success';\nimport { IconAreaInfo } from '../icon/components/icon-area-info';\nimport { IconAreaError } from '../icon/components/icon-area-error';\nimport { IconClose } from '../icon/components/icon-close';\nimport type { IconProps } from '../icon';\nimport classNames from 'classnames';\nimport './style/index.less';\n\nexport const alertTypes = tuple('success', 'info', 'warning', 'error');\nexport type AlertType = typeof alertTypes[number];\n\nexport interface AlertProps extends BaseProps {\n  /** Type of Alert styles, options:`success`, `info`, `warning`, `error` */\n  type?: AlertType;\n  /** Whether Alert can be closed */\n  closable?: boolean;\n  /** Close text to show */\n  closeText?: React.ReactNode;\n  /** Content of Alert */\n  message?: React.ReactNode;\n  /** Callback when close Alert */\n  onClose?: React.MouseEventHandler<HTMLButtonElement>;\n  /** Trigger when animation ending of Alert */\n  afterClose?: () => void;\n  showIcon?: boolean; // 前面的图标\n  // banner?: boolean;\n  icon?: React.ReactNode;\n  /** Custom closeIcon */\n  closeIcon?: React.ReactNode;\n  action?: React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}\n\ninterface IconNodeProps {\n  type: AlertProps['type'];\n  icon: AlertProps['icon'];\n  prefixCls: AlertProps['prefixCls'];\n}\n\nconst iconMap: Record<NonNullable<AlertProps['type']>, FC<IconProps>> = {\n  success: IconAreaYes,\n  info: IconAreaInfo,\n  error: IconAreaError,\n  warning: IconAreaInfo,\n};\n\ninterface CloseIconProps {\n  isClosable: boolean;\n  prefixCls: AlertProps['prefixCls'];\n  closeText: AlertProps['closeText'];\n  closeIcon: AlertProps['closeIcon'];\n  handleClose: AlertProps['onClose'];\n}\n\nconst CloseIcon: React.FC<CloseIconProps> = (props) => {\n  const { isClosable, closeText, prefixCls, closeIcon, handleClose } = props;\n  return isClosable ? (\n    <span onClick={handleClose} className={`${prefixCls}-close-icon`} tabIndex={0}>\n      {closeText ? <span className={`${prefixCls}-close-text`}>{closeText}</span> : closeIcon}\n    </span>\n  ) : null;\n};\n\nexport const Alert: FC<AlertProps> = (props) => {\n  const {\n    prefixCls: customizePrefixCls,\n    message,\n    className = '',\n    style,\n    onClick,\n    afterClose,\n    showIcon,\n    closable,\n    closeText,\n    closeIcon = <IconClose />,\n    action,\n    onClose,\n    type = 'info',\n    ...restProps\n  } = props;\n\n  const [closed, setClosed] = useState(false);\n  const { getPrefixCls } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('alert', customizePrefixCls);\n  const alertCls = classNames(\n    prefixCls,\n    `${prefixCls}-${type}`,\n    {\n      [`${prefixCls}-no-icon`]: !showIcon,\n    },\n    className\n  );\n\n  const isClosable = closeText ? true : closable;\n\n  const handleClose = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setClosed(true);\n    onClose?.(e);\n  };\n\n  return (\n    <CSSMotion\n      visible={!closed}\n      motionName={`${prefixCls}-motion`}\n      motionAppear={false}\n      motionEnter={false}\n      onLeaveStart={(node) => ({\n        maxHeight: node.offsetHeight,\n      })}\n      onLeaveEnd={afterClose}\n    >\n      {({ className: motionClassName, style: motionStyle }) => (\n        <div\n          data-show={!closed}\n          className={classNames(alertCls, motionClassName)}\n          style={{ ...style, ...motionStyle }}\n          onClick={onClick}\n          role=\"alert\"\n        >\n          {showIcon\n            ? iconMap[type]({\n                className: `${prefixCls}-icon`,\n              })\n            : null}\n          <div className={`${prefixCls}-content`}>{message ? <div className={`${prefixCls}-message`}>{message}</div> : null}</div>\n          {action ? <div className={`${prefixCls}-action`}>{action}</div> : null}\n          <CloseIcon\n            isClosable={!!isClosable}\n            closeText={closeText}\n            prefixCls={prefixCls}\n            closeIcon={closeIcon}\n            handleClose={handleClose}\n          />\n        </div>\n      )}\n    </CSSMotion>\n  );\n};\n\nexport default Alert;\n"],"names":["alertTypes","tuple","iconMap","IconAreaYes","IconAreaInfo","IconAreaError","CloseIcon","__name","props","isClosable","closeText","prefixCls","closeIcon","handleClose","_jsx","Alert","customizePrefixCls","message","style","onClick","afterClose","showIcon","closable","action","onClose","restProps","closed","setClosed","useState","getPrefixCls","alertCls","classNames","type","e","CSSMotion","node","offsetHeight","motionClassName","motionStyle"],"mappings":"mmBAcO,MAAAA,EAAAC,EAAA,UAAA,OAAA,UAAA,OAAA,EA+BPC,EAAA,CAAwE,QAAAC,EAC7DA,KAAAA,EACHC,MAAAA,EACCC,QAAAA,CAET,EAUAC,EAAAC,EAAAC,GAAA,CACE,KAAA,CAAM,WAAAC,EAAEA,UAAAA,EAAYC,UAAAA,EAAWC,UAAAA,EAAWC,YAAAA,CAAWC,EAAAA,EACrD,OAAAJ,EAAAK,EAAA,OAAA,CACE,QAAAD,EAAeA,UAAAA,GAAAA,eAA2BF,SAAAA,EAAkC,SAAAD,EAAAI,EAAA,OAAA,CAC7D,UAAA,GAAAH,eAAoBA,SAAAA,CAAyBD,CAAAA,EAAAA,CAAoBE,CAAAA,EAAAA,IAGpF,EAPA,aASOG,EAAAR,EAAAC,GAAA,CACL,KAAA,CAAM,UAAAQ,EACOA,QAAAA,EACXC,UAAAA,EAAAA,GACY,MAAAC,EACZA,QAAAA,EACAC,WAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,UAAAA,EACAZ,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EACyB,OAAAa,EACzBA,QAAAA,EACAC,KAAAA,EAAAA,UACOC,CACJA,EAAAA,EAGL,CAAAC,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAA,EAAA,EACA,CAAM,aAAAC,CAAEA,EAAAA,EAAAA,WAAAA,CAAAA,EACRlB,EAAAkB,EAAA,QAAAb,CAAA,EACAc,EAAAC,EAAApB,EAAA,GAAAA,KAAAqB,IAAA,CAGE,CAAA,GAAArB,aAAA,CAAAU,CAC6BA,EAAAA,CAAAA,EAK/BZ,EAAAC,EAAA,GAAAY,EAEAT,EAAAN,EAAA0B,GAAA,CACEN,EAAAA,EAAAA,EACAH,GAAAA,MAAAA,EAAAA,EAAW,EAFb,eAKA,OAAAV,EAAAoB,EAAA,CACY,QAAA,CAAAR,EACEA,WAAAA,GAAAA,WACKf,aAAAA,GACD,YAAA,GACD,aAAAwB,IAAA,CACY,UAAAA,EAAA,YACPC,GAClB,WAAAhB,EACYA,SAAAA,CAAAA,CAEV,UAAAiB,EAAaA,MAAAA,CAAwBC,IAAAA,EAAAA,MAAAA,CACrC,YAAA,CAAAZ,EACcA,UAAAA,EAAAA,EAAAA,CAAAA,EACmC,MAAA,CACxC,GAAAR,EAAKA,GAAAA,CAAUoB,EAAY,QAAAnB,EAClC,KAAA,QACK,SAAA,CAAAE,EAAAnB,EAAA8B,GAAA,CAGa,UAAA,GAAArB,QACEA,CAAAA,EAAAA,KAAAA,EAAAA,MAAAA,CAGpB,UAAA,GAAAA,YAAmBA,SAAAA,EAAAA,EAAAA,MAAAA,CAAgC,UAAA,GAAAA,YAAmBA,SAAAA,CAAsBM,CAAAA,EAAAA,IAAiB,CAAA,EAAAM,EAAAT,EAAA,MAAA,CACnG,UAAA,GAAAH,WAAmBA,SAAAA,CAAqBY,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,CACxC,WAAA,CAAA,CAAAd,EACMA,UAAAA,EACd,UAAAE,EACA,UAAAC,EACA,YAAAC,CACA,CAAA,CAAA,CACA,CAAA,CAAA,CAAA,CAKZ,EA1EO"}